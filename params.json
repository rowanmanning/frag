{"name":"Frag","body":"\r\nFrag (beta)\r\n===========\r\n\r\nFrag is a fluid, responsive, friendly, simple grid system for\r\nCSS written in LESS.\r\n\r\n\r\nUsing Frag\r\n----------\r\n\r\nYou can use frag in the same way you would use any third-party\r\nCSS, by including it with your code. If you already use LESS for\r\nyour project or site then you can `@import` `lib/frag.less`\r\ndirectly. This allows you to customize the grid spacing and\r\nbreak-points.\r\n\r\nUsing the grid system is just a case of adding classes to your\r\nmarkup. The best way to learn this is by studying\r\n`test/frag.html`. This file uses all of the features of frag.\r\n\r\n### Grid ###\r\n\r\nAll frag columns must be surrounded by an element with a class of\r\n`grid`:\r\n\r\n    <div class=\"grid\"><!-- columns --></div>\r\n\r\n### Columns ###\r\n\r\nTo create columns, simple add classes of `col-<n>` to your\r\nelements, where `<n>` is the number of columns (up to 12) that\r\nyou wish the element to span.\r\n\r\n    <div class=\"grid\">\r\n        <div class=\"col-6\"><!-- content --></div>\r\n        <div class=\"col-6\"><!-- content --></div>\r\n    </div>\r\n\r\n### Clearing ###\r\n\r\nWhen a grid spans multiple rows, you'll need to clear columns in\r\norder to prevent strange display issues. You need to add a class\r\nof `col-clear` to the first element in each row (ignoring the\r\nfirst row as it has nothing to clear).\r\n\r\n    <div class=\"grid\">\r\n        <div class=\"col-6\"><!-- content --></div>\r\n        <div class=\"col-6\"><!-- content --></div>\r\n        <div class=\"col-6 col-clear\"><!-- content --></div>\r\n        <div class=\"col-6\"><!-- content --></div>\r\n    </div>\r\n\r\n### Going Responsive ###\r\n\r\nFrag supports multiple break-points, and you are able to specify\r\ncolumn widths for tablet and mobile. To do this, supplement your\r\nregular `col-<n>` class with `col-<break>-<n>` where `<break>` is\r\neither \"tablet\" or \"mobile\". The example below will make all\r\ncolumns display at full width on mobile.\r\n\r\n    <div class=\"grid\">\r\n        <div class=\"col-6 col-mobile-12\"><!-- content --></div>\r\n        <div class=\"col-6 col-mobile-12\"><!-- content --></div>\r\n        <div class=\"col-6 col-mobile-12 col-clear\"><!-- content --></div>\r\n        <div class=\"col-6 col-mobile-12\"><!-- content --></div>\r\n    </div>\r\n\r\nThe mobile and tablet break-points also have their own clear\r\nclasses – `col-tablet-clear` and `col-mobile-clear`. These allow\r\nyou to use very different layouts for different devices.\r\n\r\nThe tablet and mobile break-points make some changes to the base\r\ngrid without you having to specify anything. The tablet\r\nbreak-point doubles the width of `col-<1–3>`, and sets all other\r\ncolumn sizes to 12. The mobule break-point sets everything to 12\r\nby default.\r\n\r\n\r\nBuilding Frag\r\n-------------\r\n\r\nIn order to compile the Frag LESS source into CSS, you'll need to\r\ninstall the Node.js, npm and the LESS command line utility if you\r\nhaven't already:\r\n\r\n    npm install -g less\r\n\r\nThen you can run the following from within the project directory\r\nto compile the CSS:\r\n\r\n    lessc lib/frag.less > build/frag.css\r\n\r\n\r\nLicense\r\n-------\r\n\r\nCopyright 2012, Rowan Manning  \r\nDual licensed under the [MIT][mit] or [GPL Version 2][gpl2]\r\nlicenses.\r\n\r\n\r\n[gpl2]: http://opensource.org/licenses/gpl-2.0.php\r\n[less-install]: http://ererer/\r\n[mit]: http://opensource.org/licenses/mit-license.php\r\n","tagline":"Frag is a fluid, responsive, friendly, simple grid system for CSS written in LESS.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}